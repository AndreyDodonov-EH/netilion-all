/**
 * Netilion API Documentation
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetilionApiDocumentation);
  }
}(this, function(expect, NetilionApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetilionApiDocumentation.EventApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventApi', function() {
    describe('addDocumentsToEvent', function() {
      it('should call addDocumentsToEvent successfully', function(done) {
        //uncomment below and update the code to test addDocumentsToEvent
        //instance.addDocumentsToEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEvent', function() {
      it('should call createEvent successfully', function(done) {
        //uncomment below and update the code to test createEvent
        //instance.createEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEventForAsset', function() {
      it('should call createEventForAsset successfully', function(done) {
        //uncomment below and update the code to test createEventForAsset
        //instance.createEventForAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEventForInstrumentation', function() {
      it('should call createEventForInstrumentation successfully', function(done) {
        //uncomment below and update the code to test createEventForInstrumentation
        //instance.createEventForInstrumentation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEvent', function() {
      it('should call deleteEvent successfully', function(done) {
        //uncomment below and update the code to test deleteEvent
        //instance.deleteEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAssetsOfEvent', function() {
      it('should call getAssetsOfEvent successfully', function(done) {
        //uncomment below and update the code to test getAssetsOfEvent
        //instance.getAssetsOfEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentsOfEvent', function() {
      it('should call getDocumentsOfEvent successfully', function(done) {
        //uncomment below and update the code to test getDocumentsOfEvent
        //instance.getDocumentsOfEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventById', function() {
      it('should call getEventById successfully', function(done) {
        //uncomment below and update the code to test getEventById
        //instance.getEventById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventIdStatus', function() {
      it('should call getEventIdStatus successfully', function(done) {
        //uncomment below and update the code to test getEventIdStatus
        //instance.getEventIdStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventIdType', function() {
      it('should call getEventIdType successfully', function(done) {
        //uncomment below and update the code to test getEventIdType
        //instance.getEventIdType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventStatusesOptions', function() {
      it('should call getEventStatusesOptions successfully', function(done) {
        //uncomment below and update the code to test getEventStatusesOptions
        //instance.getEventStatusesOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventTypeesOptions', function() {
      it('should call getEventTypeesOptions successfully', function(done) {
        //uncomment below and update the code to test getEventTypeesOptions
        //instance.getEventTypeesOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEvents', function() {
      it('should call getEvents successfully', function(done) {
        //uncomment below and update the code to test getEvents
        //instance.getEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventsOfAsset', function() {
      it('should call getEventsOfAsset successfully', function(done) {
        //uncomment below and update the code to test getEventsOfAsset
        //instance.getEventsOfAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventsOfInstrumentation', function() {
      it('should call getEventsOfInstrumentation successfully', function(done) {
        //uncomment below and update the code to test getEventsOfInstrumentation
        //instance.getEventsOfInstrumentation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInstrumentationsOfEvent', function() {
      it('should call getInstrumentationsOfEvent successfully', function(done) {
        //uncomment below and update the code to test getInstrumentationsOfEvent
        //instance.getInstrumentationsOfEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSpecificationsOfEvent', function() {
      it('should call getSpecificationsOfEvent successfully', function(done) {
        //uncomment below and update the code to test getSpecificationsOfEvent
        //instance.getSpecificationsOfEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeAssetsFromEvent', function() {
      it('should call removeAssetsFromEvent successfully', function(done) {
        //uncomment below and update the code to test removeAssetsFromEvent
        //instance.removeAssetsFromEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeDocumentsFromEvent', function() {
      it('should call removeDocumentsFromEvent successfully', function(done) {
        //uncomment below and update the code to test removeDocumentsFromEvent
        //instance.removeDocumentsFromEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeEventFromAsset', function() {
      it('should call removeEventFromAsset successfully', function(done) {
        //uncomment below and update the code to test removeEventFromAsset
        //instance.removeEventFromAsset(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeEventFromInstrumentation', function() {
      it('should call removeEventFromInstrumentation successfully', function(done) {
        //uncomment below and update the code to test removeEventFromInstrumentation
        //instance.removeEventFromInstrumentation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeInstrumentationsFromEvent', function() {
      it('should call removeInstrumentationsFromEvent successfully', function(done) {
        //uncomment below and update the code to test removeInstrumentationsFromEvent
        //instance.removeInstrumentationsFromEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeSpecificationsFromEvent', function() {
      it('should call removeSpecificationsFromEvent successfully', function(done) {
        //uncomment below and update the code to test removeSpecificationsFromEvent
        //instance.removeSpecificationsFromEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('renameSpecificationsOfEvent', function() {
      it('should call renameSpecificationsOfEvent successfully', function(done) {
        //uncomment below and update the code to test renameSpecificationsOfEvent
        //instance.renameSpecificationsOfEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceDocumentsOfEvent', function() {
      it('should call replaceDocumentsOfEvent successfully', function(done) {
        //uncomment below and update the code to test replaceDocumentsOfEvent
        //instance.replaceDocumentsOfEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEvent', function() {
      it('should call updateEvent successfully', function(done) {
        //uncomment below and update the code to test updateEvent
        //instance.updateEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSpecificationsOfEvent', function() {
      it('should call updateSpecificationsOfEvent successfully', function(done) {
        //uncomment below and update the code to test updateSpecificationsOfEvent
        //instance.updateSpecificationsOfEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
