/**
 * Netilion API Documentation
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NetilionApiDocumentation);
  }
}(this, function(expect, NetilionApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NetilionApiDocumentation.DocumentStatusApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DocumentStatusApi', function() {
    describe('createDocumentStatus', function() {
      it('should call createDocumentStatus successfully', function(done) {
        //uncomment below and update the code to test createDocumentStatus
        //instance.createDocumentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDocumentStatus', function() {
      it('should call deleteDocumentStatus successfully', function(done) {
        //uncomment below and update the code to test deleteDocumentStatus
        //instance.deleteDocumentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentIdStatus', function() {
      it('should call getDocumentIdStatus successfully', function(done) {
        //uncomment below and update the code to test getDocumentIdStatus
        //instance.getDocumentIdStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentStatusById', function() {
      it('should call getDocumentStatusById successfully', function(done) {
        //uncomment below and update the code to test getDocumentStatusById
        //instance.getDocumentStatusById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentStatuses', function() {
      it('should call getDocumentStatuses successfully', function(done) {
        //uncomment below and update the code to test getDocumentStatuses
        //instance.getDocumentStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentStatusesOptions', function() {
      it('should call getDocumentStatusesOptions successfully', function(done) {
        //uncomment below and update the code to test getDocumentStatusesOptions
        //instance.getDocumentStatusesOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDocumentStatus', function() {
      it('should call updateDocumentStatus successfully', function(done) {
        //uncomment below and update the code to test updateDocumentStatus
        //instance.updateDocumentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
