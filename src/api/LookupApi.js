/**
 * Netilion API Documentation
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ErrorResponse', 'model/ExtendedOrderCode', 'model/ProductResponse', 'model/SuccessorsResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ErrorResponse'), require('../model/ExtendedOrderCode'), require('../model/ProductResponse'), require('../model/SuccessorsResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.NetilionApiDocumentation) {
      root.NetilionApiDocumentation = {};
    }
    root.NetilionApiDocumentation.LookupApi = factory(root.NetilionApiDocumentation.ApiClient, root.NetilionApiDocumentation.ErrorResponse, root.NetilionApiDocumentation.ExtendedOrderCode, root.NetilionApiDocumentation.ProductResponse, root.NetilionApiDocumentation.SuccessorsResponse);
  }
}(this, function(ApiClient, ErrorResponse, ExtendedOrderCode, ProductResponse, SuccessorsResponse) {
  'use strict';

  /**
   * Lookup service.
   * @module api/LookupApi
   * @version 01.00.00
   */

  /**
   * Constructs a new LookupApi. 
   * @alias module:api/LookupApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * lookup for the extended order code for Endress+Hauser products
     * Returns an extended order code for Endress+Hauser products when the given order code is existing
     * @param {String} orderCode any Endress+Hauser order code
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ExtendedOrderCode} and HTTP response
     */
    this.ehExtendedOrderCodeLookupWithHttpInfo = function(orderCode) {
      var postBody = null;

      // verify the required parameter 'orderCode' is set
      if (orderCode === undefined || orderCode === null) {
        throw new Error("Missing the required parameter 'orderCode' when calling ehExtendedOrderCodeLookup");
      }


      var pathParams = {
      };
      var queryParams = {
        'order_code': orderCode,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['API-Key', 'Authentication'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ExtendedOrderCode;

      return this.apiClient.callApi(
        '/endress/extended_order_code_lookup', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * lookup for the extended order code for Endress+Hauser products
     * Returns an extended order code for Endress+Hauser products when the given order code is existing
     * @param {String} orderCode any Endress+Hauser order code
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ExtendedOrderCode}
     */
    this.ehExtendedOrderCodeLookup = function(orderCode) {
      return this.ehExtendedOrderCodeLookupWithHttpInfo(orderCode)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * lookup for Endress+Hauser products with asset specific search criterias
     * Returns an Endress+Hauser product, matching the serial number. The serial number is at least 4 characters long and may include letters, numbers, dashes (-), underscores (_) and backslashes (\\\\).
     * @param {String} serialNumber Any Endress+Hauser serial number
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ProductResponse} and HTTP response
     */
    this.ehProductLookupWithHttpInfo = function(serialNumber) {
      var postBody = null;

      // verify the required parameter 'serialNumber' is set
      if (serialNumber === undefined || serialNumber === null) {
        throw new Error("Missing the required parameter 'serialNumber' when calling ehProductLookup");
      }


      var pathParams = {
      };
      var queryParams = {
        'serial_number': serialNumber,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['API-Key', 'Authentication'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ProductResponse;

      return this.apiClient.callApi(
        '/endress/product_lookup', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * lookup for Endress+Hauser products with asset specific search criterias
     * Returns an Endress+Hauser product, matching the serial number. The serial number is at least 4 characters long and may include letters, numbers, dashes (-), underscores (_) and backslashes (\\\\).
     * @param {String} serialNumber Any Endress+Hauser serial number
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ProductResponse}
     */
    this.ehProductLookup = function(serialNumber) {
      return this.ehProductLookupWithHttpInfo(serialNumber)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * lookup for Endress+Hauser successor products
     * Returns successor information, if a serial_number or order code was provided, the order code transformer is used, for product_code the successor comes from the Product Status List r Possible include values: &#x60;&#x60;&#x60;product, product.pictures,product.status, product.parent&#x60;&#x60;&#x60; The serial number is at least 4 characters long and may include letters, numbers, dashes (-), underscores (_) and backslashes (\\\\).
     * @param {Object} opts Optional parameters
     * @param {String} opts.include Comma separated list of objects to include in response
     * @param {String} opts.serialNumber Any Endress+Hauser serial number
     * @param {String} opts.orderCode an Endress+Hauser order code
     * @param {String} opts.productCode an Endress+Hauser product_code
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SuccessorsResponse} and HTTP response
     */
    this.ehSuccessorLookupWithHttpInfo = function(opts) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'include': opts['include'],
        'serial_number': opts['serialNumber'],
        'order_code': opts['orderCode'],
        'product_code': opts['productCode'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['API-Key', 'Authentication'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = SuccessorsResponse;

      return this.apiClient.callApi(
        '/endress/successor_lookup', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * lookup for Endress+Hauser successor products
     * Returns successor information, if a serial_number or order code was provided, the order code transformer is used, for product_code the successor comes from the Product Status List r Possible include values: &#x60;&#x60;&#x60;product, product.pictures,product.status, product.parent&#x60;&#x60;&#x60; The serial number is at least 4 characters long and may include letters, numbers, dashes (-), underscores (_) and backslashes (\\\\).
     * @param {Object} opts Optional parameters
     * @param {String} opts.include Comma separated list of objects to include in response
     * @param {String} opts.serialNumber Any Endress+Hauser serial number
     * @param {String} opts.orderCode an Endress+Hauser order code
     * @param {String} opts.productCode an Endress+Hauser product_code
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SuccessorsResponse}
     */
    this.ehSuccessorLookup = function(opts) {
      return this.ehSuccessorLookupWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
