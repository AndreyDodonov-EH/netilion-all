/**
 * Netilion API Documentation
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ExtendedOrderCode from '../model/ExtendedOrderCode';
import ProductResponse from '../model/ProductResponse';
import SuccessorsResponse from '../model/SuccessorsResponse';

/**
* Lookup service.
* @module api/LookupApi
* @version 01.00.00
*/
export default class LookupApi {

    /**
    * Constructs a new LookupApi. 
    * @alias module:api/LookupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * lookup for the extended order code for Endress+Hauser products
     * Returns an extended order code for Endress+Hauser products when the given order code is existing
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ExtendedOrderCode} and HTTP response
     */
    ehExtendedOrderCodeLookupWithHttpInfo(orderCode) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'order_code': orderCode
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API-Key', 'Authentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExtendedOrderCode;

      return this.apiClient.callApi(
        '/endress/extended_order_code_lookup', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * lookup for the extended order code for Endress+Hauser products
     * Returns an extended order code for Endress+Hauser products when the given order code is existing
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ExtendedOrderCode}
     */
    ehExtendedOrderCodeLookup(orderCode) {
      return this.ehExtendedOrderCodeLookupWithHttpInfo(orderCode)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * lookup for Endress+Hauser products with asset specific search criterias
     * Returns an Endress+Hauser product, matching the serial number. The serial number is at least 4 characters long and may include letters, numbers, dashes (-), underscores (_) and backslashes (\\\\).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ProductResponse} and HTTP response
     */
    ehProductLookupWithHttpInfo(serialNumber) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'serial_number': serialNumber
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API-Key', 'Authentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProductResponse;

      return this.apiClient.callApi(
        '/endress/product_lookup', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * lookup for Endress+Hauser products with asset specific search criterias
     * Returns an Endress+Hauser product, matching the serial number. The serial number is at least 4 characters long and may include letters, numbers, dashes (-), underscores (_) and backslashes (\\\\).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ProductResponse}
     */
    ehProductLookup(serialNumber) {
      return this.ehProductLookupWithHttpInfo(serialNumber)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * lookup for Endress+Hauser successor products
     * Returns successor information, if a serial_number or order code was provided, the order code transformer is used, for product_code the successor comes from the Product Status List r Possible include values: &#x60;&#x60;&#x60;product, product.pictures,product.status, product.parent&#x60;&#x60;&#x60; The serial number is at least 4 characters long and may include letters, numbers, dashes (-), underscores (_) and backslashes (\\\\).
     * @param {Object} opts Optional parameters
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/SuccessorsResponse} and HTTP response
     */
    ehSuccessorLookupWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'include': opts['include'],
        'serial_number': opts['serialNumber'],
        'order_code': opts['orderCode'],
        'product_code': opts['productCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['API-Key', 'Authentication'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SuccessorsResponse;

      return this.apiClient.callApi(
        '/endress/successor_lookup', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * lookup for Endress+Hauser successor products
     * Returns successor information, if a serial_number or order code was provided, the order code transformer is used, for product_code the successor comes from the Product Status List r Possible include values: &#x60;&#x60;&#x60;product, product.pictures,product.status, product.parent&#x60;&#x60;&#x60; The serial number is at least 4 characters long and may include letters, numbers, dashes (-), underscores (_) and backslashes (\\\\).
     * @param {Object} opts Optional parameters
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/SuccessorsResponse}
     */
    ehSuccessorLookup(opts) {
      return this.ehSuccessorLookupWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }

}
