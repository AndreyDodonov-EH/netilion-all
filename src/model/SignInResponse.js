/**
 * Netilion API Documentation
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The SignInResponse model module.
* @module model/SignInResponse
* @version 01.00.00
*/
export default class SignInResponse {
    /**
    * Constructs a new <code>SignInResponse</code>.
    * @alias module:model/SignInResponse
    * @class
    * @param time {String} time at which the user signed in
    * @param application {String} name of the application the user signed in
    * @param ip {String} remote ip used by the user
    */

    constructor(time, application, ip) {
        
        
        this['time'] = time;
        this['application'] = application;
        this['ip'] = ip;
        
    }

    /**
    * Constructs a <code>SignInResponse</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/SignInResponse} obj Optional instance to populate.
    * @return {module:model/SignInResponse} The populated <code>SignInResponse</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignInResponse();
                        
            
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
            if (data.hasOwnProperty('application')) {
                obj['application'] = ApiClient.convertToType(data['application'], 'String');
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
            if (data.hasOwnProperty('browser_name')) {
                obj['browser_name'] = ApiClient.convertToType(data['browser_name'], 'String');
            }
            if (data.hasOwnProperty('browser_version')) {
                obj['browser_version'] = ApiClient.convertToType(data['browser_version'], 'String');
            }
            if (data.hasOwnProperty('device_type')) {
                obj['device_type'] = ApiClient.convertToType(data['device_type'], 'String');
            }
            if (data.hasOwnProperty('platform_name')) {
                obj['platform_name'] = ApiClient.convertToType(data['platform_name'], 'String');
            }
            if (data.hasOwnProperty('platform_version')) {
                obj['platform_version'] = ApiClient.convertToType(data['platform_version'], 'String');
            }
        }
        return obj;
    }

    /**
    * time at which the user signed in
    * @member {String} time
    */
    time = undefined;
    /**
    * name of the application the user signed in
    * @member {String} application
    */
    application = undefined;
    /**
    * remote ip used by the user
    * @member {String} ip
    */
    ip = undefined;
    /**
    * name of the used browser
    * @member {String} browser_name
    */
    browser_name = undefined;
    /**
    * version of the used browser
    * @member {String} browser_version
    */
    browser_version = undefined;
    /**
    * type of the used device (desktop, tablet or mobile)
    * @member {String} device_type
    */
    device_type = undefined;
    /**
    * name of the used platform
    * @member {String} platform_name
    */
    platform_name = undefined;
    /**
    * version of the used platform
    * @member {String} platform_version
    */
    platform_version = undefined;




}
