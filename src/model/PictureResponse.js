/**
 * Netilion API Documentation
 * Welcome to the Netilion API Documentation, which provides interactive access and documentation to our REST API. Please visit our developer portal for further instructions and information: https://developer.netilion.endress.com/ 
 *
 * OpenAPI spec version: 01.00.00
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The PictureResponse model module.
* @module model/PictureResponse
* @version 01.00.00
*/
export default class PictureResponse {
    /**
    * Constructs a new <code>PictureResponse</code>.
    * @alias module:model/PictureResponse
    * @class
    * @param id {Number} Id of object
    * @param type {String} type of attachment, can be 'file' or 'link'
    * @param downloadHref {String} the download link to the file of the attachment
    */

    constructor(id, type, downloadHref) {
        
        
        this['id'] = id;
        this['type'] = type;
        this['download_href'] = downloadHref;
        
    }

    /**
    * Constructs a <code>PictureResponse</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/PictureResponse} obj Optional instance to populate.
    * @return {module:model/PictureResponse} The populated <code>PictureResponse</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PictureResponse();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('file_name')) {
                obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
            }
            if (data.hasOwnProperty('fingerprint')) {
                obj['fingerprint'] = ApiClient.convertToType(data['fingerprint'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('download_href')) {
                obj['download_href'] = ApiClient.convertToType(data['download_href'], 'String');
            }
        }
        return obj;
    }

    /**
    * Id of object
    * @member {Number} id
    */
    id = undefined;
    /**
    * type of attachment, can be 'file' or 'link'
    * @member {String} type
    */
    type = undefined;
    /**
    * the original filename of the attachment
    * @member {String} file_name
    */
    file_name = undefined;
    /**
    * SHA256 checksum of the file
    * @member {String} fingerprint
    */
    fingerprint = undefined;
    /**
    * width of picture
    * @member {Number} width
    */
    width = undefined;
    /**
    * height of picture
    * @member {Number} height
    */
    height = undefined;
    /**
    * the download link to the file of the attachment
    * @member {String} download_href
    */
    download_href = undefined;




}
